

def configure(c):
    pass


def build(c):

    includes = '. vm syntax semantic util type ncode visual jit ../third/klib'
    c.objects( source = 'visual/dot_syntax_tree.c ncode/qcode_debug.c', 
               target = 'neart_debug',
               includes = includes,
             )

    c.objects( source = 'ncode/rcode_writer.c ncode/cpool_builder.c ncode/qcode.c', 
               target = 'neart_code',
               includes = includes,
             )
    c.objects( source = 'syntax/neart.l syntax/neart.y syntax/ast.c ' +
                        'semantic/gpir.c semantic/sem.c semantic/typecheck.c ' +
                        'util/symt.c semantic/types.c semantic/binding.c',
               target = 'neart_core',
               includes = includes,
             )

    c.objects( source = 'util/memio.c ',
               target = 'neart_shared',
               includes = includes,
             )

    c.program( source = 'main.c',
               target = 'neartc',
               use = 'neart_core neart_code neart_runtime klib neart_debug neart_shared',
               includes = includes
             )

    c.objects( source = 'vm/cpool.c vm/loader.c vm/rcode.c util/io.c jit/compiler.c jit/bblock.c jit/reg_alloc.c ' +
                        'jit/run.c jit/x86_64.c ',
               target = 'neart_runtime',
               includes = includes,
             )

    c.objects( source = 'vm/vm.c',
               target = 'neart_vm',
               includes = includes,
             )

    c.program( source = 'vm/main.c',
               target = 'nvm',
               use = 'neart_vm neart_runtime neart_shared',
               includes = includes,
             )

